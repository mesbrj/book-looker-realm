version: v1.0.0

# Kratos Configuration for book-looker-realm
serve:
  public:
    base_url: http://localhost:4433/
    cors:
      enabled: true
      allowed_origins:
        - "*"
      allowed_methods:
        - "GET"
        - "POST"
        - "PUT"
        - "PATCH"
        - "DELETE"
        - "HEAD"
        - "OPTIONS"
      allowed_headers:
        - "*"
      exposed_headers:
        - "*"
  admin:
    base_url: http://localhost:4434/

dsn: postgres://ory:ory-secret@postgres:5432/kratos?sslmode=disable

identity:
  default_schema_id: default
  schemas:
    - id: default
      url: file:///etc/config/kratos/identity.schema.json

# Configure for Kerberos principal management via kerby-instruments
selfservice:
  default_browser_return_url: http://localhost:3000/
  allowed_return_urls:
    - http://localhost:3000
    - http://localhost:4455  # Oathkeeper proxy
    - https://kerby-instruments:8443/auth/callback  # kerby-instruments auth callback

  flows:
    error:
      ui_url: http://localhost:3000/error

    settings:
      ui_url: http://localhost:3000/settings
      privileged_session_max_age: 15m
      required_aal: highest_available

    recovery:
      enabled: true
      ui_url: http://localhost:3000/recovery
      use: code
      # Integration with kerby-instruments for principal recovery
      after:
        hooks:
          - hook: web_hook
            config:
              url: https://kerby-instruments:8443/api/v1/principals/recovery-notification
              method: POST
              headers:
                Content-Type: application/json
                Authorization: "Bearer kerby-instruments-service-token"
              body: file:///etc/config/kratos/hooks/recovery.jsonnet

    verification:
      enabled: true
      ui_url: http://localhost:3000/verification
      use: code
      after:
        default_browser_return_url: http://localhost:3000/
        hooks:
          - hook: web_hook
            config:
              url: https://kerby-instruments:8443/api/v1/principals/verification-completed
              method: POST
              headers:
                Content-Type: application/json
                Authorization: "Bearer kerby-instruments-service-token"
              body: file:///etc/config/kratos/hooks/verification.jsonnet

    logout:
      after:
        default_browser_return_url: http://localhost:3000/login

    login:
      ui_url: http://localhost:3000/login
      lifespan: 10m
      after:
        default_browser_return_url: http://localhost:3000/
        hooks:
          - hook: web_hook
            config:
              url: https://kerby-instruments:8443/api/v1/principals/login-event
              method: POST
              headers:
                Content-Type: application/json
                Authorization: "Bearer kerby-instruments-service-token"
              body: file:///etc/config/kratos/hooks/login.jsonnet

    registration:
      enabled: true
      ui_url: http://localhost:3000/registration
      lifespan: 10m
      after:
        default_browser_return_url: http://localhost:3000/
        hooks:
          - hook: web_hook
            config:
              url: https://kerby-instruments:8443/api/v1/principals/register
              method: POST
              headers:
                Content-Type: application/json
                Authorization: "Bearer kerby-instruments-service-token"
              body: file:///etc/config/kratos/hooks/registration.jsonnet

log:
  level: debug
  format: json

secrets:
  cookie:
    - your-cookie-secret-32-chars-long
  cipher:
    - your-cipher-secret-32-chars-long

ciphers:
  algorithm: xchacha20-poly1305

hashers:
  algorithm: bcrypt
  bcrypt:
    cost: 8

courier:
  smtp:
    connection_uri: smtps://test:test@mailslurper:1025/?skip_ssl_verify=true

# HTTP client configuration for webhook calls to kerby-instruments
http:
  tls:
    # Force trust of your self-signed CA for all HTTPS calls
    verify_certificates: true
    ca_cert_file: /etc/certs/ca.crt
    # Additional security settings
    min_version: "1.2"
    max_version: "1.3"
    # Explicitly trust your CA for webhook calls
    insecure_skip_verify: false
  timeout:
    read: 30s
    write: 30s
    idle: 120s
  headers:
    # Default headers for webhook calls
    User-Agent: "Ory-Kratos/1.0.0 book-looker-realm"

# TLS configuration for server endpoints
serve:
  public:
    tls:
      # Ready for HTTPS when needed
      enabled: false
      cert:
        path: /etc/certs/server.crt
      key:
        path: /etc/certs/server.key
  admin:
    tls:
      enabled: false
      cert:
        path: /etc/certs/server.crt
      key:
        path: /etc/certs/server.key

session:
  lifespan: 24h
  cookie:
    domain: localhost
    name: ory_kratos_session
    same_site: Lax

oauth2_provider:
  url: http://hydra:4445
  override_return_to: false

# Kerby-instruments integration settings
feature_flags:
  use_continue_with_transitions: false

# Custom webhook endpoints for kerby-instruments integration
webhooks:
  - hook: after_registration
    config:
      url: https://kerby-instruments:8443/api/v1/principals/kratos-registration
      method: POST
      headers:
        Content-Type: application/json
        Authorization: "Bearer kerby-instruments-service-token"
      response:
        ignore: false
        parse: false
      can_interrupt: true
      
  - hook: after_settings
    config:
      url: https://kerby-instruments:8443/api/v1/principals/kratos-settings-update
      method: POST
      headers:
        Content-Type: application/json
        Authorization: "Bearer kerby-instruments-service-token"
      response:
        ignore: false
        parse: false
      can_interrupt: false

# Custom identity validation via kerby-instruments
identity:
  default_schema_id: default
  schemas:
    - id: default
      url: file:///etc/config/kratos/identity.schema.json
  # External validation endpoint for Kerberos principal verification
  validation:
    url: https://kerby-instruments:8443/api/v1/principals/validate
    headers:
      Content-Type: application/json
      Authorization: "Bearer kerby-instruments-service-token"
