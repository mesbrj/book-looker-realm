version: '3.8'

networks:
  ory-network:
    driver: bridge
  book-looker-realm:
    driver: bridge

volumes:
  postgres-data:
  hydra-secrets:
  kratos-secrets:
  keto-data:

services:
  # PostgreSQL Database for Ory services
  postgres:
    image: postgres:15-alpine
    container_name: ory-postgres
    environment:
      POSTGRES_DB: ory
      POSTGRES_USER: ory
      POSTGRES_PASSWORD: ory-secret
      POSTGRES_MULTIPLE_DATABASES: hydra,kratos,keto
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-databases.sql:/docker-entrypoint-initdb.d/init-databases.sql
    networks:
      - ory-network
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ory -d ory"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Ory Hydra - OAuth2 and OpenID Connect Provider
  hydra-migrate:
    image: oryd/hydra:v2.2.0
    container_name: hydra-migrate
    environment:
      DSN: postgres://ory:ory-secret@postgres:5432/hydra?sslmode=disable
    command: migrate -c /etc/config/hydra/hydra.yml sql -e --yes
    volumes:
      - ./config/hydra:/etc/config/hydra:ro
    networks:
      - ory-network
    depends_on:
      postgres:
        condition: service_healthy

  hydra:
    image: oryd/hydra:v2.2.0
    container_name: ory-hydra
    ports:
      - "4444:4444" # Public endpoint
      - "4445:4445" # Admin endpoint
    command: serve -c /etc/config/hydra/hydra.yml all --dev
    volumes:
      - ./config/hydra:/etc/config/hydra:ro
      - ./certs:/etc/certs:ro  # Your self-signed PKI certificates
    environment:
      DSN: postgres://ory:ory-secret@postgres:5432/hydra?sslmode=disable
      SECRETS_SYSTEM: your-system-secret-32-chars-long
      URLS_SELF_ISSUER: http://localhost:4444
      URLS_CONSENT: http://localhost:3000/consent
      URLS_LOGIN: http://localhost:3000/login
    networks:
      - ory-network
      - book-looker-realm
    depends_on:
      hydra-migrate:
        condition: service_completed_successfully
    restart: unless-stopped

  # Ory Kratos - Identity and User Management
  kratos-migrate:
    image: oryd/kratos:v1.0.0
    container_name: kratos-migrate
    environment:
      DSN: postgres://ory:ory-secret@postgres:5432/kratos?sslmode=disable
    command: migrate sql -e --yes
    volumes:
      - ./config/kratos:/etc/config/kratos:ro
    networks:
      - ory-network
    depends_on:
      postgres:
        condition: service_healthy

  kratos:
    image: oryd/kratos:v1.0.0
    container_name: ory-kratos
    ports:
      - "4433:4433" # Public endpoint
      - "4434:4434" # Admin endpoint
    command: serve -c /etc/config/kratos/kratos.yml --dev --watch-courier
    volumes:
      - ./config/kratos:/etc/config/kratos:ro
      - ./config/kratos/identity.schema.json:/etc/config/kratos/identity.schema.json:ro
    environment:
      DSN: postgres://ory:ory-secret@postgres:5432/kratos?sslmode=disable
      LOG_LEVEL: trace
    networks:
      - ory-network
      - book-looker-realm
    depends_on:
      kratos-migrate:
        condition: service_completed_successfully
    restart: unless-stopped

  # Ory Keto - Fine-grained Authorization
  keto-migrate:
    image: oryd/keto:v0.11.1
    container_name: keto-migrate
    environment:
      DSN: postgres://ory:ory-secret@postgres:5432/keto?sslmode=disable
    command: migrate up --yes
    volumes:
      - ./config/keto:/etc/config/keto:ro
    networks:
      - ory-network
    depends_on:
      postgres:
        condition: service_healthy

  keto:
    image: oryd/keto:v0.11.1
    container_name: ory-keto
    ports:
      - "4466:4466" # Read API
      - "4467:4467" # Write API
      - "4468:4468" # OPL API
    command: serve -c /etc/config/keto/keto.yml
    volumes:
      - ./config/keto:/etc/config/keto:ro
    environment:
      DSN: postgres://ory:ory-secret@postgres:5432/keto?sslmode=disable
    networks:
      - ory-network
      - book-looker-realm
    depends_on:
      keto-migrate:
        condition: service_completed_successfully
    restart: unless-stopped

  # Ory Oathkeeper - Identity & Access Proxy
  oathkeeper:
    image: oryd/oathkeeper:v0.40.6
    container_name: ory-oathkeeper
    ports:
      - "4455:4455" # Proxy port
      - "4456:4456" # API port
    command: serve -c /etc/config/oathkeeper/oathkeeper.yml
    volumes:
      - ./config/oathkeeper:/etc/config/oathkeeper:ro
      - ./certs:/etc/certs:ro  # Your self-signed PKI certificates
    environment:
      LOG_LEVEL: debug
    networks:
      - ory-network
      - book-looker-realm
    depends_on:
      - hydra
      - kratos
      - keto
    restart: unless-stopped

  # MailSlurper for email testing (development only)
  mailslurper:
    image: oryd/mailslurper:latest-smtps
    container_name: ory-mailslurper
    ports:
      - "4436:4436" # Web UI
      - "4437:4437" # API
      - "1025:1025" # SMTP
    networks:
      - ory-network

  # Jaeger for distributed tracing
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: ory-jaeger
    ports:
      - "16686:16686"
      - "14268:14268"
    environment:
      COLLECTOR_OTLP_ENABLED: true
    networks:
      - ory-network
